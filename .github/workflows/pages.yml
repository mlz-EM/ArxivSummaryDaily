name: pages
on:
  schedule:
    # Runs at 12:00 PM Beijing Time (UTC+8) from Monday to Friday
    - cron: '0 4 * * 1-5'
  # Or you can trigger it manually
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
      pages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install package
        run: pip install -e .

      - name: Make Configuration
        run: |
          cp ./config/settings.example.py ./config/settings.py
          sed -i '1i import os' ./config/settings.py
          sed -i 's/"YOUR_API_HERE"/os.getenv("LLM_API_KEY")/' ./config/settings.py
      
      # Cache the built data
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: ./data
          key: ${{ runner.os }}-dist-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dist-

      - name: Build the arXiv data
        env:
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
        run: arxivsummary

      - name: Build the Job data
        env:
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
        run: jobsummary

      # Use site_manager to manage the site
      - name: Checkout target repo (personal-site)
        uses: actions/checkout@v4
        with:
          repository: mlz-EM/personal-site
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          path: personal-site  # checked out to subdirectory

      - name: Copy Markdown files to personal-site/src/data
        run: |
          cp ./data/*.md personal-site/src/data/

      - name: Commit and push to personal-site
        run: |
          cd personal-site
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/data/arXivDaily.md
          git commit -m "Update summaries from arXivDaily run ${{ github.run_id }}" || echo "No changes to commit"
          git push
